<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <Property name="logFile" value="logs/log" />
    <Property name="maxFileSize" value="30MB" />

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d [%thread] %-5level %logger{50} -[%file:%line]- %msg%n
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="mainLog"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/main.log</file>
        <encoder>
            <pattern>%d [%thread] %-5level -[%file:%line]- %msg%n
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${logFile}.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <maxFileSize>${maxFileSize}</maxFileSize>
        </rollingPolicy>
    </appender>

    <appender name="errorLog"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/error.log</file>
        <encoder>
            <pattern>%d [%thread] %-5level %logger{36} -[%file:%line]- %msg%n
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${logFile}.error.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <maxFileSize>${maxFileSize}</maxFileSize>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <logger name="mainLogger" level="INFO" >
        <appender-ref ref="mainLog" />
    </logger>

    <logger name="errorLogger" level="DEBUG" >
        <appender-ref ref="errorLog" />
    </logger>


    <root level="${rootlevel}">
        <appender-ref ref="STDOUT" />
    </root>

</configuration>
